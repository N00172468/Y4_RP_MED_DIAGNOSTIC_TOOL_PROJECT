[{"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\index.js":"1","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\App.js":"2","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\reportWebVitals.js":"3","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Nav.js":"4","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Homepage.js":"5","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\CreateInfo.js":"6","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\CreateUser.js":"7","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\EditInfo.js":"8","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\theme.js":"9","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Navigation.js":"10","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\ViewInfo.js":"11","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Notes.js":"12","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\ViewNote.js":"13","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\CreateNote.js":"14","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\BookmarksPage.js":"15","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Symptoms.js":"16","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Search.js":"17"},{"size":222,"mtime":1610809119029,"results":"18","hashOfConfig":"19"},{"size":1978,"mtime":1616928734196,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":2247,"mtime":1610893014971,"results":"22","hashOfConfig":"19"},{"size":7594,"mtime":1614591967780,"results":"23","hashOfConfig":"19"},{"size":13839,"mtime":1614553580397,"results":"24","hashOfConfig":"19"},{"size":2762,"mtime":1610907649338,"results":"25","hashOfConfig":"19"},{"size":11461,"mtime":1614554063037,"results":"26","hashOfConfig":"19"},{"size":456,"mtime":1610838454784,"results":"27","hashOfConfig":"19"},{"size":6827,"mtime":1616929915007,"results":"28","hashOfConfig":"19"},{"size":8799,"mtime":1614553054803,"results":"29","hashOfConfig":"19"},{"size":5199,"mtime":1614595377902,"results":"30","hashOfConfig":"19"},{"size":6150,"mtime":1614591979089,"results":"31","hashOfConfig":"19"},{"size":9176,"mtime":1614595684288,"results":"32","hashOfConfig":"19"},{"size":4756,"mtime":1614597910100,"results":"33","hashOfConfig":"19"},{"size":6045,"mtime":1616414357987,"results":"34","hashOfConfig":"19"},{"size":3320,"mtime":1616935855094,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"fqwehs",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\index.js",[],["74","75"],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\App.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\reportWebVitals.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Nav.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Homepage.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\CreateInfo.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\CreateUser.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\EditInfo.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\theme.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Navigation.js",["76"],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\ViewInfo.js",["77","78","79","80","81"],"import React, { Component } from 'react';\r\nimport {withRouter, Link} from 'react-router-dom';\r\nimport axios from 'axios'\r\n\r\nimport 'date-fns';\r\n// import DateFnsUtils from '@date-io/date-fns';\r\n// import {\r\n//     MuiPickersUtilsProvider,\r\n//     KeyboardDatePicker,\r\n//   } from '@material-ui/pickers';\r\n\r\nimport {\r\n    createStyles,\r\n    withStyles,\r\n    Card,\r\n    CardActionArea,\r\n    CardActions,\r\n    CardContent,\r\n    Button,\r\n    Typography,\r\n    // InputLabel,\r\n    // MenuItem,\r\n    // Select,\r\n    // FormControl,\r\n    TextField\r\n\r\n} from \"@material-ui/core\";\r\n\r\nimport './../App.css'\r\n\r\nconst styles = (theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: theme.palette.secondary.main,\r\n      margin: theme.spacing(2)\r\n    },\r\n    button: {\r\n      margin: `0px ${theme.spacing(1)}px`\r\n\r\n    }\r\n  });\r\n  \r\nconst Info = props => (\r\n    <Card className={props.classes.root} >\r\n        <CardActions style={{ padding: '10px', display: 'flex'}}>\r\n            <div style={{ marginLeft: \"auto\" }}>\r\n                <Button \r\n                    size=\"large\" \r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    className={props.classes.button}\r\n                >\r\n                    <Link to={\"/edit/\" + props.info._id} style ={{ textDecoration: \"none\" }}>\r\n                        Edit\r\n                    </Link> \r\n                </Button>\r\n\r\n                <Button \r\n                    size=\"large\" \r\n                    className={props.classes.button}\r\n                    color=\"secondary\"\r\n                    type=\"submit\"\r\n                    value=\"Delete\"\r\n                    variant=\"contained\"\r\n                    onClick={() => { props.deleteInfo(props.info._id) }}\r\n                    style ={{ textDecoration: \"none\" }}\r\n                >\r\n                    \r\n                    Delete\r\n                    \r\n                </Button>\r\n            </div>\r\n        </CardActions>\r\n    </Card>\r\n);\r\n\r\nclass ViewInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: '',\r\n            overview: '',\r\n            symptoms: '',\r\n            causes: '',\r\n            risk_factors: '',\r\n            complications: '',\r\n            prevention: '',\r\n            users: [],\r\n            loading: true,\r\n            info: []\r\n        };\r\n\r\n        this.deleteInfo = this.deleteInfo.bind(this);\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:5000/info/' + this.props.match.params.id)\r\n            .then(response => {\r\n                console.log('response!', response)\r\n                this.setState({\r\n                    title: response.data.title,\r\n                    overview: response.data.overview,\r\n                    symptoms: response.data.symptoms,\r\n                    causes: response.data.causes,\r\n                    risk_factors: response.data.risk_factors,\r\n                    complications: response.data.complications,\r\n                    prevention: response.data.prevention,\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n\r\n        axios.get('http://localhost:5000/users/')\r\n            .then(response => {\r\n                if (response.data.length > 0) {\r\n                    this.setState({\r\n                        users: response.data,\r\n                        loading: false\r\n                    });\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    deleteInfo(id) {\r\n        axios.delete('http://localhost:5000/info/' + id)\r\n            .then(res => console.log(res.data)\r\n        );\r\n        \r\n        this.setState({\r\n            info: this.state.info.filter(el => el._id !== id)\r\n        });\r\n    };\r\n\r\n    infoList() {\r\n        return this.state.info.map(currentInfo => {\r\n            return <Info info={currentInfo} deleteInfo={this.deleteInfo} key={currentInfo._id}/>;\r\n        })\r\n    };\r\n\r\n    render() {\r\n        if(this.state.loading) return <Typography>Loading</Typography>\r\n\r\n        return (\r\n            <div className=\"cardRoot\">\r\n                <Typography \r\n                    gutterBottom \r\n                    variant=\"h5\" \r\n                    component=\"h2\" \r\n                    style={{ fontFamily: \"Raleway\", textTransform: \"uppercase\", letterSpacing: \"3px\" }}\r\n                >\r\n                    {this.state.title}\r\n                </Typography>\r\n\r\n                <br />\r\n\r\n                <Typography\r\n                    variant=\"h5\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    Overview:\r\n                </Typography>\r\n\r\n                <Typography\r\n                    variant=\"body1\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    {this.state.overview}\r\n                </Typography>\r\n\r\n                <br />\r\n\r\n                <Typography\r\n                    variant=\"h5\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    Symptoms:\r\n                </Typography>\r\n\r\n                <Typography\r\n                    variant=\"body1\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    {this.state.symptoms}\r\n                </Typography>\r\n\r\n                <br />\r\n\r\n                <Typography\r\n                    variant=\"h5\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    Causes:\r\n                </Typography>\r\n\r\n                <Typography\r\n                    variant=\"body1\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    {this.state.causes}\r\n                </Typography>\r\n\r\n                <br />\r\n\r\n                <Typography\r\n                    variant=\"h5\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    Risk Factors:\r\n                </Typography>\r\n\r\n                <Typography\r\n                    variant=\"body1\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    {this.state.risk_factors}\r\n                </Typography>\r\n\r\n                <br />\r\n\r\n                <Typography\r\n                    variant=\"h5\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    Complications:\r\n                </Typography>\r\n\r\n                <Typography\r\n                    variant=\"body1\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    {this.state.complications}\r\n                </Typography>\r\n\r\n                <br />\r\n\r\n                <Typography\r\n                    variant=\"h5\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    Prevention:\r\n                </Typography>\r\n\r\n                <Typography\r\n                    variant=\"body1\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    {this.state.prevention}\r\n                </Typography>\r\n\r\n                {this.state.info.map(currentInfo => {\r\n                    return <Info info={currentInfo} deleteInfo={this.deleteInfo} key={currentInfo._id} classes={this.props.classes}/>;\r\n                    })\r\n                }\r\n\r\n                {/* <Button \r\n                    size=\"large\" \r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    className={this.state.button}\r\n                >\r\n                    <Link to={\"/edit/\" + this.state.info._id} style ={{ textDecoration: \"none\" }}>\r\n                        Edit\r\n                    </Link> \r\n                </Button>\r\n\r\n                <Button \r\n                    size=\"large\" \r\n                    className={this.state.button}\r\n                    color=\"secondary\"\r\n                    type=\"submit\"\r\n                    value=\"Delete\"\r\n                    variant=\"contained\"\r\n                    onClick={() => { this.props.deleteInfo(this.props.info._id) }}\r\n                    style ={{ textDecoration: \"none\" }}\r\n                >\r\n                    \r\n                    Delete\r\n                    \r\n                </Button> */}\r\n            </div>\r\n        )\r\n    } \r\n}\r\n\r\nexport default withRouter(ViewInfo)\r\n","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Notes.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\ViewNote.js",["82","83","84","85","86"],"import React, { Component } from 'react';\r\nimport {withRouter, Link} from 'react-router-dom';\r\nimport axios from 'axios'\r\n\r\nimport 'date-fns';\r\n// import DateFnsUtils from '@date-io/date-fns';\r\n// import {\r\n//     MuiPickersUtilsProvider,\r\n//     KeyboardDatePicker,\r\n//   } from '@material-ui/pickers';\r\n\r\nimport {\r\n    createStyles,\r\n    withStyles,\r\n    Card,\r\n    CardActionArea,\r\n    CardActions,\r\n    CardContent,\r\n    Button,\r\n    Typography,\r\n    // InputLabel,\r\n    // MenuItem,\r\n    // Select,\r\n    // FormControl,\r\n    TextField\r\n\r\n} from \"@material-ui/core\";\r\n\r\nimport './../App.css'\r\n\r\nconst styles = (theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: theme.palette.secondary.main,\r\n      margin: theme.spacing(2)\r\n    },\r\n    button: {\r\n      margin: `0px ${theme.spacing(1)}px`\r\n\r\n    }\r\n  });\r\n  \r\n  const Note = props => (\r\n    <Card className={props.classes.root} >\r\n        <CardActions style={{ padding: '10px', display: 'flex'}}>\r\n            <div style={{ marginLeft: \"auto\" }}>\r\n                <Button \r\n                    size=\"large\" \r\n                    color=\"info\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    className={props.classes.button}\r\n                >\r\n                    <Link to={\"/view/note/\" + props.note._id} style ={{ textDecoration: \"none\" }}>\r\n                        View\r\n                    </Link> \r\n                </Button>\r\n                \r\n                <Button \r\n                    size=\"large\" \r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    className={props.classes.button}\r\n                >\r\n                    <Link to={\"/edit/\" + props.note._id} style ={{ textDecoration: \"none\" }}>\r\n                        Edit\r\n                    </Link> \r\n                </Button>\r\n\r\n                <Button \r\n                    size=\"large\" \r\n                    className={props.classes.button}\r\n                    color=\"secondary\"\r\n                    type=\"submit\"\r\n                    value=\"Delete\"\r\n                    variant=\"contained\"\r\n                    onClick={() => { props.deleteNote(props.note._id) }}\r\n                    style ={{ textDecoration: \"none\" }}\r\n                >\r\n                    \r\n                        Delete\r\n                    \r\n                </Button>\r\n            </div>\r\n        </CardActions>\r\n    </Card>\r\n);\r\n\r\nclass ViewNote extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: '',\r\n            body: '',\r\n            stickyNote: '',\r\n            flashcard: '',\r\n            image: '',\r\n            users: [],\r\n            loading: true,\r\n            note: []\r\n        };\r\n\r\n        this.deleteNote = this.deleteNote.bind(this);\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:5000/note/' + this.props.match.params.id)\r\n            .then(response => {\r\n                console.log('response!', response)\r\n                this.setState({\r\n                    title: response.data.title,\r\n                    body: response.data.body,\r\n                    stickyNote: response.data.stickyNote,\r\n                    flashcard: response.data.flashcard,\r\n                    image: response.data.image,\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n\r\n        axios.get('http://localhost:5000/users/')\r\n            .then(response => {\r\n                if (response.data.length > 0) {\r\n                    this.setState({\r\n                        users: response.data,\r\n                        loading: false\r\n                    });\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    deleteNote(id) {\r\n        axios.delete('http://localhost:5000/note/' + id)\r\n            .then(res => console.log(res.data)\r\n        );\r\n        \r\n        this.setState({\r\n            note: this.state.note.filter(el => el._id !== id)\r\n        });\r\n    };\r\n\r\n    noteList() {\r\n        return this.state.note.map(currentNote => {\r\n            return <Note note={currentNote} deleteNote={this.deleteNote} key={currentNote._id}/>;\r\n        })\r\n    };\r\n\r\n    render() {\r\n        if(this.state.loading) return <Typography>Loading</Typography>\r\n\r\n        return (\r\n            <div className=\"cardRoot\">\r\n                <Typography \r\n                    gutterBottom \r\n                    variant=\"h5\" \r\n                    component=\"h2\" \r\n                    style={{ fontFamily: \"Raleway\", textTransform: \"uppercase\", letterSpacing: \"3px\" }}\r\n                >\r\n                    {this.state.title}\r\n                </Typography>\r\n\r\n                <br />\r\n\r\n                <Typography\r\n                    variant=\"body1\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    {this.state.body}\r\n                </Typography>\r\n\r\n                <br />\r\n\r\n                <Typography\r\n                    variant=\"body1\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    {this.state.stickyNote}\r\n                </Typography>\r\n\r\n                <br />\r\n\r\n                <Typography\r\n                    variant=\"body1\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    {this.state.flashcard}\r\n                </Typography>\r\n\r\n                <br />\r\n\r\n                <Typography\r\n                    variant=\"body1\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    {this.state.image}\r\n                </Typography>\r\n\r\n                {this.state.note.map(currentNote => {\r\n                    return <Note note={currentNote} deleteNote={this.deleteNote} key={currentNote._id} classes={this.props.classes}/>;\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    } \r\n}\r\n\r\nexport default withRouter(ViewNote)\r\n","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\CreateNote.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\BookmarksPage.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Symptoms.js",["87","88","89","90"],"import React, { Component, useState, useEffect } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n    createStyles,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\n\r\nimport './../App.css'\r\n\r\n// const BASE_URL = \"https://priaid-symptom-checker-v1.p.rapidapi.com\"\r\n// const TOKEN = \"3cf5fb64ffmsh61f42d18ae2ad82p1a237ejsn61ee2be8eb99\"\r\n\r\nconst styles = (theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: theme.palette.secondary.main,\r\n      margin: theme.spacing(2)\r\n    },\r\n    button: {\r\n      margin: `0px ${theme.spacing(1)}px`\r\n\r\n    }\r\n  });\r\n  \r\nconst Symptom = props => (\r\n    <Card className={props.classes.root} >\r\n        <CardActionArea>\r\n            <CardContent>\r\n                <Typography\r\n                    variant=\"h5\" \r\n                    color=\"textSecondary\"\r\n                    component=\"h5\"    \r\n                >\r\n                    {props.Symptom.symptom}\r\n                </Typography>\r\n\r\n                {/* <Typography\r\n                    variant=\"body2\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    {props.Symptom.body}\r\n                </Typography> */}\r\n            </CardContent>\r\n        </CardActionArea>\r\n\r\n        <CardActions style={{ padding: '10px', display: 'flex'}}>\r\n            {/* <div style={{ marginLeft: \"auto\" }}>\r\n                <Button \r\n                    size=\"large\" \r\n                    color=\"info\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    className={props.classes.button}\r\n                >\r\n                    <Link to={\"/view/Symptom/\" + props.Symptom._id} style ={{ textDecoration: \"none\" }}>\r\n                        View\r\n                    </Link> \r\n                </Button>\r\n                \r\n                <Button \r\n                    size=\"large\" \r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    className={props.classes.button}\r\n                >\r\n                    <Link to={\"/edit/\" + props.Symptom._id} style ={{ textDecoration: \"none\" }}>\r\n                        Edit\r\n                    </Link> \r\n                </Button>\r\n\r\n                <Button \r\n                    size=\"large\" \r\n                    className={props.classes.button}\r\n                    color=\"secondary\"\r\n                    type=\"submit\"\r\n                    value=\"Delete\"\r\n                    variant=\"contained\"\r\n                    onClick={() => { props.deleteSympom(props.Symptom._id) }}\r\n                    style ={{ textDecoration: \"none\" }}\r\n                >\r\n                    \r\n                        Delete\r\n                    \r\n                </Button>\r\n            </div> */}\r\n        </CardActions>\r\n    </Card>\r\n);\r\n\r\n// const [posts, setPosts] = useState([]);\r\n\r\nclass SymptomsPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // this.deleteSymptom = this.deleteSymptom.bind(this);\r\n\r\n        this.state = {\r\n            symptoms: []\r\n        };\r\n    };\r\n    \r\n    // componentDidMount() {\r\n    //     axios.get(BASE_URL + \"/symptoms?language=en-gb&format=json\", {\r\n    //         headers: {\r\n    //             \"x-rapidapi-key\": TOKEN\r\n    //         }\r\n    //     })\r\n    //     .then(response => {\r\n    //         console.log('response!', response)\r\n    //         this.setState({ symptoms: response.data })\r\n    //     })\r\n    //     .catch((error) => {\r\n    //         console.log(error);\r\n    //     })\r\n    // };\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:5000/Symptom/')\r\n            .then(response => {\r\n                this.setState({ symptoms: response.data })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    };\r\n    \r\n    // deleteSymptom(id) {\r\n    //     axios.delete('http://localhost:5000/Symptom/' + id)\r\n    //         .then(res => console.log(res.data)\r\n    //     );\r\n        \r\n    //     this.setState({\r\n    //         symptoms: this.state.Symptom.filter(el => el._id !== id)\r\n    //     });\r\n    // };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"cardRoot\">\r\n                <Typography \r\n                    gutterBottom \r\n                    variant=\"h5\" \r\n                    component=\"h2\" \r\n                    style={{ fontFamily: \"Raleway\", textTransform: \"uppercase\", letterSpacing: \"3px\" }}\r\n                >\r\n                    Your Symptoms\r\n                \r\n                    {/* <div style={{ padding: '10px', display: 'flex'}}> */}\r\n                        {/* <Button \r\n                            size=\"large\" \r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            style={{ marginLeft: \"35px\" }}\r\n                        >\r\n                            <Link to={\"/create/Symptom\"} style ={{ textDecoration: \"none\", float: \"right\" }}>\r\n                                Create Symptom\r\n                            </Link> \r\n                        </Button> */}\r\n                    {/* </div> */}\r\n                </Typography>\r\n\r\n                \r\n                {this.state.symptoms.length > 0 && this.state.symptoms.map((currentSymptom, i) => {\r\n                    return <Symptom Symptom={currentSymptom} deleteSymptom={this.deleteSymptom} key={i} classes={this.props.classes}/>;\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(SymptomsPage)                             \r\n","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Search.js",["91"],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":105,"column":10,"nodeType":"98","messageId":"99","endLine":105,"endColumn":16},{"ruleId":"96","severity":1,"message":"100","line":14,"column":5,"nodeType":"98","messageId":"99","endLine":14,"endColumn":15},{"ruleId":"96","severity":1,"message":"101","line":16,"column":5,"nodeType":"98","messageId":"99","endLine":16,"endColumn":19},{"ruleId":"96","severity":1,"message":"102","line":18,"column":5,"nodeType":"98","messageId":"99","endLine":18,"endColumn":16},{"ruleId":"96","severity":1,"message":"103","line":25,"column":5,"nodeType":"98","messageId":"99","endLine":25,"endColumn":14},{"ruleId":"96","severity":1,"message":"104","line":31,"column":7,"nodeType":"98","messageId":"99","endLine":31,"endColumn":13},{"ruleId":"96","severity":1,"message":"100","line":14,"column":5,"nodeType":"98","messageId":"99","endLine":14,"endColumn":15},{"ruleId":"96","severity":1,"message":"101","line":16,"column":5,"nodeType":"98","messageId":"99","endLine":16,"endColumn":19},{"ruleId":"96","severity":1,"message":"102","line":18,"column":5,"nodeType":"98","messageId":"99","endLine":18,"endColumn":16},{"ruleId":"96","severity":1,"message":"103","line":25,"column":5,"nodeType":"98","messageId":"99","endLine":25,"endColumn":14},{"ruleId":"96","severity":1,"message":"104","line":31,"column":7,"nodeType":"98","messageId":"99","endLine":31,"endColumn":13},{"ruleId":"96","severity":1,"message":"105","line":1,"column":28,"nodeType":"98","messageId":"99","endLine":1,"endColumn":36},{"ruleId":"96","severity":1,"message":"106","line":1,"column":38,"nodeType":"98","messageId":"99","endLine":1,"endColumn":47},{"ruleId":"96","severity":1,"message":"107","line":2,"column":9,"nodeType":"98","messageId":"99","endLine":2,"endColumn":13},{"ruleId":"96","severity":1,"message":"108","line":9,"column":8,"nodeType":"98","messageId":"99","endLine":9,"endColumn":14},{"ruleId":"96","severity":1,"message":"109","line":21,"column":10,"nodeType":"98","messageId":"99","endLine":21,"endColumn":15},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'filter' is assigned a value but never used.","Identifier","unusedVar","'withStyles' is defined but never used.","'CardActionArea' is defined but never used.","'CardContent' is defined but never used.","'TextField' is defined but never used.","'styles' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'names' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]