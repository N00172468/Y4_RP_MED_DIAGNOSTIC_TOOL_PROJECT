[{"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\index.js":"1","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\App.js":"2","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\reportWebVitals.js":"3","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Nav.js":"4","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Homepage.js":"5","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\CreateInfo.js":"6","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\CreateUser.js":"7","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\EditInfo.js":"8","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\theme.js":"9","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Navigation.js":"10"},{"size":222,"mtime":1610809119029,"results":"11","hashOfConfig":"12"},{"size":1092,"mtime":1610907192227,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":2247,"mtime":1610893014971,"results":"15","hashOfConfig":"12"},{"size":4861,"mtime":1611342718509,"results":"16","hashOfConfig":"12"},{"size":9237,"mtime":1611340990920,"results":"17","hashOfConfig":"12"},{"size":2762,"mtime":1610907649338,"results":"18","hashOfConfig":"12"},{"size":8290,"mtime":1611342047084,"results":"19","hashOfConfig":"12"},{"size":456,"mtime":1610838454784,"results":"20","hashOfConfig":"12"},{"size":7781,"mtime":1611340453088,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"fqwehs",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\index.js",[],["47","48"],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\App.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\reportWebVitals.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Nav.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Homepage.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\CreateInfo.js",["49","50","51","52"],"import React, { Component } from 'react';\r\nimport axios from 'axios'\r\n\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n  } from '@material-ui/pickers';\r\n\r\nimport {\r\n    createStyles,\r\n    withStyles,\r\n    Card,\r\n    CardActionArea,\r\n    CardActions,\r\n    CardContent,\r\n    Button,\r\n    Typography,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    FormControl,\r\n    TextField\r\n\r\n} from \"@material-ui/core\";\r\n\r\n\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\n\r\nconst styles = (theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: theme.palette.secondary.main,\r\n      margin: theme.spacing(2)\r\n    },\r\n    button: {\r\n      margin: `0px ${theme.spacing(1)}px`\r\n\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n    },\r\n  });\r\n\r\n// const CreateInfoCard = props => (\r\n//     <Card className={props.classes.root} >\r\n//         <CardActionArea>\r\n//             <CardContent>\r\n//                 <FormControl className={props.classes.formControl}>\r\n//                     <InputLabel id=\"demo-simple-select-label\">User</InputLabel>  \r\n\r\n//                     <Select\r\n//                         labelId=\"demo-simple-select-label\"\r\n//                         id=\"demo-simple-select\"\r\n//                         value={this.state.username}\r\n//                         onChange={this.onChangeUsername}\r\n//                     >\r\n//                         {\r\n//                             this.state.users.map(function(user) {\r\n//                                 return <option\r\n//                                             key={user}\r\n//                                             value={user}\r\n//                                         >\r\n//                                             {user}\r\n//                                         </option>\r\n//                             })\r\n//                         };\r\n//                     </Select>\r\n//                 </FormControl>\r\n//             </CardContent>\r\n//         </CardActionArea>\r\n//     </Card>\r\n// );\r\n\r\n// const classes = styles();\r\n// const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n// const handleDateChange = (date) => {\r\n//     setSelectedDate(date);\r\n//   };\r\nclass CreateInfo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangeDescription = this.onChangeDescription.bind(this);\r\n        this.onChangeExperience = this.onChangeExperience.bind(this);\r\n        this.onChangeDate = this.onChangeDate.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            username: '',\r\n            description: '',\r\n            experience: 0,\r\n            date: new Date(),\r\n\r\n            users: []\r\n        };\r\n    };\r\n\r\n    componentDidMount() {\r\n        // this.setState({\r\n        //     users: ['test user'],\r\n        //     username: 'test user'\r\n        // });\r\n\r\n        axios.get('http://localhost:5000/users/')\r\n            .then(response => {\r\n                if (response.data.length > 0) {\r\n                    this.setState({\r\n                        users: response.data.map(user => user.username),\r\n                        username: response.data[0].username\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    };\r\n\r\n    onChangeDescription(e) {\r\n        this.setState({\r\n            description: e.target.value\r\n        });\r\n    };\r\n\r\n    onChangeExperience(e) {\r\n        this.setState({\r\n            experience: e.target.value\r\n        });\r\n    };\r\n\r\n    onChangeDate(date) {\r\n        this.setState({\r\n            date: date\r\n        });\r\n    };\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const info = {\r\n            username: this.state.username,\r\n            description: this.state.description,\r\n            experience: this.state.experience,\r\n            date: this.state.date\r\n        };\r\n\r\n        // console.log(info);\r\n\r\n        axios.post('http://localhost:5000/info/add', info)\r\n            .then(res => console.log(res.data));\r\n\r\n        // window.location = '/';\r\n        this.props.history.push('/')\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"cardRoot\">\r\n                <Typography \r\n                    gutterBottom \r\n                    variant=\"h5\" \r\n                    component=\"h2\" \r\n                    style={{ fontFamily: \"Raleway\", textTransform: \"uppercase\", letterSpacing: \"3px\" }}\r\n                >\r\n                    Add Information\r\n                </Typography>\r\n\r\n                {/* <CreateInfoCard classes={this.props.classes} /> */}\r\n\r\n                <Card>\r\n                    {/* <CardActionArea> */}\r\n                        <CardContent>\r\n                            <form noValidate autoComplete=\"off\">\r\n                                <FormControl>\r\n                                    <InputLabel id=\"demo-simple-select-label\">User</InputLabel>  \r\n\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-label\"\r\n                                        id=\"demo-simple-select\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChangeUsername}\r\n                                        style={{ marginBottom: \"35px\" }}\r\n                                    >\r\n                                        {\r\n                                            this.state.users.map(function(user) {\r\n                                                return <option\r\n                                                            key={user}\r\n                                                            value={user}\r\n                                                        >\r\n                                                            {user}\r\n                                                        </option>\r\n                                            })\r\n                                        };\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                                <TextField \r\n                                    fullWidth\r\n                                    id=\"standard-basic\" \r\n                                    label=\"Description\" \r\n                                    value={this.state.description}\r\n                                    onChange={this.onChangeDescription}\r\n                                    style={{ marginBottom: \"35px\" }}\r\n                                />\r\n\r\n                                <TextField \r\n                                    id=\"standard-basic\" \r\n                                    label=\"Experience (In Years)\" \r\n                                    value={this.state.experience}\r\n                                    onChange={this.onChangeExperience}\r\n                                    style={{ marginBottom: \"35px\" }}\r\n                                />\r\n\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils} style={{ padding: '10px', display: 'flex'}}>\r\n                                    <div style={{ marginLeft: \"auto\" }}>\r\n                                        <KeyboardDatePicker\r\n                                            margin=\"normal\"\r\n                                            id=\"date-picker-dialog\"\r\n                                            label=\"Date picker dialog\"\r\n                                            format=\"dd/MM/yyyy\"\r\n                                            value={this.state.date}\r\n                                            onChange={this.onChangeDate}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                        }}\r\n                                        />\r\n                                    </div>\r\n                                </MuiPickersUtilsProvider>\r\n                            </form>\r\n                        </CardContent>\r\n                    {/* </CardActionArea> */}\r\n\r\n                    <CardActions style={{ padding: '10px', display: 'flex'}}>\r\n                        <div style={{ marginLeft: \"auto\" }}>\r\n                            <Button \r\n                                size=\"large\" \r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                value=\"Create Info Log\"\r\n                                onClick={this.onSubmit}\r\n                            >\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    </CardActions>\r\n                </Card>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\n// export default withStyles(styles)(CreateInfo)   \r\nexport default withRouter(CreateInfo)","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\CreateUser.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\EditInfo.js",["53"],"import React, { Component } from 'react';\r\nimport axios from 'axios'\r\n\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n  } from '@material-ui/pickers';\r\n\r\nimport {\r\n    // createStyles,\r\n    // withStyles,\r\n    Card,\r\n    CardActionArea,\r\n    CardActions,\r\n    CardContent,\r\n    Button,\r\n    Typography,\r\n    InputLabel,\r\n    // MenuItem,\r\n    Select,\r\n    FormControl,\r\n    TextField\r\n\r\n} from \"@material-ui/core\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\n\r\nclass EditInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangeDescription = this.onChangeDescription.bind(this);\r\n        this.onChangeExperience = this.onChangeExperience.bind(this);\r\n        this.onChangeDate = this.onChangeDate.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handleUserSelect = this.handleUserSelect.bind(this)\r\n\r\n        this.state = {\r\n            username: '',\r\n            description: '',\r\n            experience: 0,\r\n            date: new Date(),\r\n\r\n            users: [],\r\n            loading: true\r\n        };\r\n    };\r\n\r\n    componentDidMount() {\r\n        // this.setState({\r\n        //     users: ['test user'],\r\n        //     username: 'test user'\r\n        // });\r\n        axios.get('http://localhost:5000/info/' + this.props.match.params.id)\r\n            .then(response => {\r\n                console.log('respponse!', response)\r\n                this.setState({\r\n                    username: response.data.username,\r\n                    description: response.data.description,\r\n                    experience: response.data.experience,\r\n                    date: new Date(response.data.date)\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n\r\n        axios.get('http://localhost:5000/users/')\r\n            .then(response => {\r\n                \r\n\r\n                if (response.data.length > 0) {\r\n                    this.setState({\r\n                        users: response.data,\r\n                        loading: false\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    handleUserSelect(e) {\r\n        console.log('select!', e)\r\n        // this,set\r\n    }\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    };\r\n\r\n    onChangeDescription(e) {\r\n        this.setState({\r\n            description: e.target.value\r\n        });\r\n    };\r\n\r\n    onChangeExperience(e) {\r\n        this.setState({\r\n            experience: e.target.value\r\n        });\r\n    };\r\n\r\n    onChangeDate(date) {\r\n        this.setState({\r\n            date: date\r\n        });\r\n    };\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const info = {\r\n            username: this.state.username,\r\n            description: this.state.description,\r\n            experience: this.state.experience,\r\n            date: this.state.date\r\n        };\r\n\r\n        console.log(info);\r\n\r\n        axios.post('http://localhost:5000/info/update/' + this.props.match.params.id, info)\r\n            .then(res => {\r\n                this.props.history.push('/')\r\n\r\n            });\r\n\r\n        \r\n    };\r\n\r\n    render() {\r\n        if(this.state.loading) return <Typography>Loading</Typography>\r\n        return (\r\n            <div className=\"cardRoot\">\r\n                <Typography \r\n                    gutterBottom \r\n                    variant=\"h5\" \r\n                    component=\"h2\" \r\n                    style={{ fontFamily: \"Raleway\", textTransform: \"uppercase\", letterSpacing: \"3px\" }}\r\n                >\r\n                    Add Information\r\n                </Typography>\r\n\r\n                {/* <CreateInfoCard classes={this.props.classes} /> */}\r\n\r\n                <Card>\r\n                    {/* <CardActionArea> */}\r\n                        <CardContent>\r\n                            <form noValidate autoComplete=\"off\">\r\n                                <FormControl>\r\n                                    <InputLabel id=\"demo-simple-select-label\">User</InputLabel>  \r\n\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-label\"\r\n                                        id=\"demo-simple-select\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChangeUsername}\r\n                                        style={{ marginBottom: \"35px\" }}\r\n                                    >\r\n                                     \r\n                                        {\r\n                                            this.state.users.map((user, i) => {\r\n                                                \r\n                                                return <option\r\n                                                            key={i}\r\n                                                            value={user.username}\r\n                                                            onChange={this.handleUserSelect}\r\n                                                        >\r\n                                                            {user.username}\r\n                                                        </option>\r\n                                            })\r\n                                        };\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                                <TextField \r\n                                    fullWidth\r\n                                    id=\"standard-basic\" \r\n                                    label=\"Description\" \r\n                                    value={this.state.description}\r\n                                    onChange={this.onChangeDescription}\r\n                                    style={{ marginBottom: \"35px\" }}\r\n                                />\r\n\r\n                                <TextField \r\n                                    id=\"standard-basic\" \r\n                                    label=\"Experience (In Years)\" \r\n                                    value={this.state.experience}\r\n                                    onChange={this.onChangeExperience}\r\n                                    style={{ marginBottom: \"35px\" }}\r\n                                />\r\n\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils} style={{ padding: '10px', display: 'flex'}}>\r\n                                    <div style={{ marginLeft: \"auto\" }}>\r\n                                        <KeyboardDatePicker\r\n                                            margin=\"normal\"\r\n                                            id=\"date-picker-dialog\"\r\n                                            label=\"Date picker dialog\"\r\n                                            format=\"dd/MM/yyyy\"\r\n                                            onChange={this.onChangeDate}\r\n                                            KeyboardButtonProps={{\r\n                                                'aria-label': 'change date',\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </MuiPickersUtilsProvider>\r\n                            </form>\r\n                        </CardContent>\r\n                    {/* </CardActionArea> */}\r\n\r\n                    <CardActions style={{ padding: '10px', display: 'flex'}}>\r\n                        <div style={{ marginLeft: \"auto\" }}>\r\n                            <Button \r\n                                size=\"large\" \r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                value=\"Create Info Log\"\r\n                                onClick={this.onSubmit}\r\n                            >\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    </CardActions>\r\n                </Card>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default withRouter(EditInfo)\r\n",["54","55"],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\theme.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Navigation.js",["56","57"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Nav from \"./Nav\";\r\n\r\nimport {\r\n  createStyles,\r\n  useTheme,\r\n  withStyles,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  Divider,\r\n  ListItemText,\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Hidden,\r\n  Drawer,\r\n  CssBaseline,\r\n  InputBase,\r\n  fade\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu,\r\n  Home,\r\n  AddCircleOutline,\r\n  Face,\r\n  TurnedInNot,\r\n  Widgets,\r\n  Search\r\n  // ListItemIcon\r\n} from \"@material-ui/icons\";\r\n\r\nconst drawerWidth = 60;\r\n\r\nconst styles = (theme) => \r\ncreateStyles({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginRight: drawerWidth,\r\n    },\r\n    \r\n  },\r\n  appBarToolbar: {\r\n    justifyContent: 'space-between'\r\n  },\r\n  menuButton: {\r\n    // marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  mobileDrawerPaper: {\r\n    width: 240\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  // drawer: {\r\n  //   [theme.breakpoints.up('sm')]: {\r\n  //     width: drawerWidth,\r\n  //     flexShrink: 0,\r\n  //   },\r\n  // },\r\n\r\n  // appBar: {\r\n  //   [theme.breakpoints.up('sm')]: {\r\n  //     width: `calc(100% - ${drawerWidth}px)`,\r\n  //     marginLeft: drawerWidth\r\n  //   },\r\n  // },\r\n\r\n  // menuButton: {\r\n  //   marginRight: theme.spacing(2),\r\n  //   [theme.breakpoints.up('sm')]: {\r\n  //     display: 'none',\r\n  //   },\r\n  // },\r\n\r\n  // // necessary for content to be below app bar\r\n  // toolbar: theme.mixins.toolbar,\r\n  // drawerPaper: {\r\n  //   width: drawerWidth,\r\n  // },\r\n\r\n  // content: {\r\n  //   flexGrow: 1,\r\n  //   padding: theme.spacing(3),\r\n  // },\r\n\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst Navigation = (props) => {\r\n  const { window, classes } = props;\r\n  \r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar}>\r\n\r\n      <Divider />\r\n\r\n      <List>\r\n        <Link to=\"/\" style ={{ textDecoration: \"none\" }}>\r\n          {['Home'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index = <Home />}\r\n              </ListItemIcon>\r\n\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </Link>\r\n\r\n        <Link to=\"/create\" style ={{ textDecoration: \"none\" }}>\r\n          {['Create Info'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index = <AddCircleOutline />}\r\n              </ListItemIcon>\r\n\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </Link>\r\n\r\n        <Link to=\"/User\" style ={{ textDecoration: \"none\" }}>\r\n          {['Add User'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index = <Face />}\r\n              </ListItemIcon>\r\n\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </Link>\r\n      \r\n        <Link to=\"/\" style ={{ textDecoration: \"none\" }}>\r\n          {['Bookmarks'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index = <TurnedInNot />}\r\n              </ListItemIcon>\r\n\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </Link>\r\n\r\n        <Link to=\"/\" style ={{ textDecoration: \"none\" }}>\r\n          {['Categories'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index = <Widgets />}\r\n              </ListItemIcon>\r\n\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </Link>\r\n      </List>\r\n\r\n      {/* <Divider /> */}\r\n    </div>\r\n    </div>\r\n  );\r\n\r\n  const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n          <CssBaseline />\r\n\r\n          <AppBar position=\"fixed\" className={props.classes.appBar}>\r\n            <Toolbar className={classes.appBarToolbar}>\r\n     \r\n              \r\n              {/* <Nav />  */}\r\n\r\n              <div className={props.classes.search} edge=\"start\">\r\n                <div className={props.classes.searchIcon}>\r\n                  <Search />\r\n                </div>\r\n                <InputBase\r\n                  placeholder=\"Search…\"\r\n                  className={\r\n                    props.classes.inputRoot,\r\n                    props.classes.inputInput\r\n                  }\r\n                  inputProps={{ 'aria-label': 'search' }}\r\n                />\r\n              </div>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                edge=\"end\"\r\n                onClick={handleDrawerToggle}\r\n                className={props.classes.menuButton}\r\n              >\r\n                <Menu />\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n            {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n            <Hidden smUp implementation=\"css\"> \r\n              <Drawer\r\n                container={container}\r\n                variant=\"temporary\"\r\n                anchor={theme.direction === 'rtl' ? 'right' : 'right'}\r\n                open={mobileOpen}\r\n                onClose={handleDrawerToggle}\r\n                classes={{paper: props.classes.mobileDrawerPaper}}\r\n                ModalProps={{keepMounted: true}} // Better open performance on mobile.\r\n              >\r\n                {drawer}\r\n              </Drawer>\r\n            </Hidden> \r\n\r\n            <Hidden xsDown implementation=\"css\">\r\n            <Drawer\r\n                classes={{paper: props.classes.drawerPaper}}\r\n                className={props.classes.drawer}\r\n                variant=\"permanent\"\r\n                anchor=\"right\"\r\n              >\r\n                {drawer}\r\n              </Drawer>\r\n            </Hidden>\r\n          </nav>\r\n\r\n          <main className={props.classes.content}>\r\n            <div className={props.classes.toolbar} />\r\n            \r\n            {props.children}\r\n          </main>\r\n\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(Navigation);\r\n",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":13,"column":5,"nodeType":"64","messageId":"65","endLine":13,"endColumn":15},{"ruleId":"62","severity":1,"message":"66","line":15,"column":5,"nodeType":"64","messageId":"65","endLine":15,"endColumn":19},{"ruleId":"62","severity":1,"message":"67","line":21,"column":5,"nodeType":"64","messageId":"65","endLine":21,"endColumn":13},{"ruleId":"62","severity":1,"message":"68","line":33,"column":7,"nodeType":"64","messageId":"65","endLine":33,"endColumn":13},{"ruleId":"62","severity":1,"message":"66","line":15,"column":5,"nodeType":"64","messageId":"65","endLine":15,"endColumn":19},{"ruleId":"58","replacedBy":"69"},{"ruleId":"60","replacedBy":"70"},{"ruleId":"62","severity":1,"message":"71","line":4,"column":8,"nodeType":"64","messageId":"65","endLine":4,"endColumn":11},{"ruleId":"72","severity":1,"message":"73","line":256,"column":44,"nodeType":"74","messageId":"75","endLine":256,"endColumn":45},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'withStyles' is defined but never used.","Identifier","unusedVar","'CardActionArea' is defined but never used.","'MenuItem' is defined but never used.","'styles' is assigned a value but never used.",["76"],["77"],"'Nav' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]