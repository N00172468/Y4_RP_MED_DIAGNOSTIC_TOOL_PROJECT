[{"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\index.js":"1","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\App.js":"2","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\reportWebVitals.js":"3","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Nav.js":"4","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Homepage.js":"5","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\CreateInfo.js":"6","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\CreateUser.js":"7","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\EditInfo.js":"8","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\theme.js":"9","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Navigation.js":"10","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\ViewInfo.js":"11","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Notes.js":"12","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\ViewNote.js":"13","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\CreateNote.js":"14","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\BookmarksPage.js":"15","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Symptoms.js":"16","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Search.js":"17"},{"size":222,"mtime":1610809119029,"results":"18","hashOfConfig":"19"},{"size":1852,"mtime":1616928594731,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":2247,"mtime":1610893014971,"results":"22","hashOfConfig":"19"},{"size":7594,"mtime":1614591967780,"results":"23","hashOfConfig":"19"},{"size":13839,"mtime":1614553580397,"results":"24","hashOfConfig":"19"},{"size":2762,"mtime":1610907649338,"results":"25","hashOfConfig":"19"},{"size":11461,"mtime":1614554063037,"results":"26","hashOfConfig":"19"},{"size":456,"mtime":1610838454784,"results":"27","hashOfConfig":"19"},{"size":9229,"mtime":1616413511159,"results":"28","hashOfConfig":"19"},{"size":8799,"mtime":1614553054803,"results":"29","hashOfConfig":"19"},{"size":5199,"mtime":1614595377902,"results":"30","hashOfConfig":"19"},{"size":6150,"mtime":1614591979089,"results":"31","hashOfConfig":"19"},{"size":9176,"mtime":1614595684288,"results":"32","hashOfConfig":"19"},{"size":4756,"mtime":1614597910100,"results":"33","hashOfConfig":"19"},{"size":6045,"mtime":1616414357987,"results":"34","hashOfConfig":"19"},{"size":3781,"mtime":1616414433854,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"fqwehs",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\index.js",[],["76","77"],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\App.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\reportWebVitals.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Nav.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Homepage.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\CreateInfo.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\CreateUser.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\EditInfo.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\theme.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Navigation.js",["78","79","80","81","82","83"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Nav from \"./Nav\";\r\n\r\nimport {\r\n  createStyles,\r\n  useTheme,\r\n  withStyles,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  Divider,\r\n  ListItemText,\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Hidden,\r\n  Drawer,\r\n  CssBaseline,\r\n  InputBase,\r\n  fade,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu,\r\n  Home,\r\n  AddCircleOutline,\r\n  Face,\r\n  TurnedInNot,\r\n  Widgets,\r\n  Search as SearchIcon, //:)\r\n  LibraryBooksOutlined\r\n  // ListItemIcon\r\n} from \"@material-ui/icons\";\r\nimport Search from \"./Search\"\r\n\r\n// const drawerWidth = 60;\r\nconst drawerWidth = 200;\r\n\r\nconst styles = (theme) => \r\ncreateStyles({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginRight: drawerWidth,\r\n    },\r\n    \r\n  },\r\n  appBarToolbar: {\r\n    justifyContent: 'space-between'\r\n  },\r\n  menuButton: {\r\n    // marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  mobileDrawerPaper: {\r\n    width: 240\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  // drawer: {\r\n  //   [theme.breakpoints.up('sm')]: {\r\n  //     width: drawerWidth,\r\n  //     flexShrink: 0,\r\n  //   },\r\n  // },\r\n\r\n  // appBar: {\r\n  //   [theme.breakpoints.up('sm')]: {\r\n  //     width: `calc(100% - ${drawerWidth}px)`,\r\n  //     marginLeft: drawerWidth\r\n  //   },\r\n  // },\r\n\r\n  // menuButton: {\r\n  //   marginRight: theme.spacing(2),\r\n  //   [theme.breakpoints.up('sm')]: {\r\n  //     display: 'none',\r\n  //   },\r\n  // },\r\n\r\n  // // necessary for content to be below app bar\r\n  // toolbar: theme.mixins.toolbar,\r\n  // drawerPaper: {\r\n  //   width: drawerWidth,\r\n  // },\r\n\r\n  // content: {\r\n  //   flexGrow: 1,\r\n  //   padding: theme.spacing(3),\r\n  // },\r\n\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n\r\n    // marginLeft: 0,\r\n    // width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n\r\n  searchIcon: {\r\n    // padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    // position: 'absolute',\r\n    // pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n\r\n    [theme.breakpoints.up('sm')]: {\r\n      // width: '12ch',\r\n      width: '112ch',\r\n\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst Navigation = (props) => {\r\n  const { window, classes } = props;\r\n  \r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const [filter, setFilter] = React.useState(\"\");\r\n\r\n  const handleSearchChange = (e) => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar}>\r\n\r\n      <Divider />\r\n\r\n      <List>\r\n        <Link to=\"/\" style ={{ textDecoration: \"none\" }}>\r\n          {['Home'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index = <Home />}\r\n              </ListItemIcon>\r\n\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </Link>\r\n\r\n        <Link to=\"/create\" style ={{ textDecoration: \"none\" }}>\r\n          {['Publicise Your Knowledge'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index = <AddCircleOutline />}\r\n              </ListItemIcon>\r\n\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </Link>\r\n\r\n        {/* <Link to=\"/User\" style ={{ textDecoration: \"none\" }}>\r\n          {['Add User'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index = <Face />}\r\n              </ListItemIcon>\r\n\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </Link> */}\r\n      \r\n        <Link to=\"/Note\" style ={{ textDecoration: \"none\" }}>\r\n          {['Your Notes'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index = <LibraryBooksOutlined />}\r\n              </ListItemIcon>\r\n\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </Link>\r\n\r\n        <Link to=\"/Bookmarks\" style ={{ textDecoration: \"none\" }}>\r\n          {['Bookmarks'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index = <TurnedInNot />}\r\n              </ListItemIcon>\r\n\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </Link>\r\n\r\n        <Link to=\"/Symptom\" style ={{ textDecoration: \"none\" }}>\r\n          {['Symptom'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index = <LibraryBooksOutlined />}\r\n              </ListItemIcon>\r\n\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </Link>\r\n\r\n        <Link to=\"/\" style ={{ textDecoration: \"none\" }}>\r\n          {['Categories'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index = <Widgets />}\r\n              </ListItemIcon>\r\n\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </Link>\r\n      </List>\r\n\r\n      {/* <Divider /> */}\r\n    </div>\r\n    </div>\r\n  );\r\n\r\n  const container = window !== undefined ? () => window().document.body : undefined;\r\n  // const onSearchChange = this.props.onSearchChange;\r\n  // const container = this.window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n          <CssBaseline />\r\n\r\n          <AppBar position=\"fixed\" className={props.classes.appBar} onChange={handleSearchChange}>\r\n            <Toolbar className={classes.appBarToolbar}>\r\n     \r\n              {/* <Nav />  */}\r\n\r\n              <div className={props.classes.search} edge=\"start\">\r\n                {/* <div className={props.classes.searchIcon}> */}\r\n                  {/* <SearchIcon /> */}\r\n                  {/* <TextField /> */}\r\n                  {/* hello */}\r\n                  <Search />\r\n\r\n                {/* </div> */}\r\n                {/* <InputBase\r\n                  placeholder=\"Search…\"       \r\n                  className={\r\n                    props.classes.inputRoot,\r\n                    props.classes.inputInput\r\n                  }\r\n                  inputProps={{ 'aria-label': 'search' }}\r\n                  // onChange={onSearchChange}\r\n                /> */}\r\n              </div>\r\n              \r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                edge=\"end\"\r\n                onClick={handleDrawerToggle}\r\n                className={props.classes.menuButton}\r\n              >\r\n                <Menu />\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n            {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n            <Hidden smUp implementation=\"css\"> \r\n              <Drawer\r\n                container={container}\r\n                variant=\"temporary\"\r\n                anchor={theme.direction === 'rtl' ? 'right' : 'right'}\r\n                open={mobileOpen}\r\n                onClose={handleDrawerToggle}\r\n                classes={{paper: props.classes.mobileDrawerPaper}}\r\n                ModalProps={{keepMounted: true}} // Better open performance on mobile.\r\n              >\r\n                {drawer}\r\n              </Drawer>\r\n            </Hidden> \r\n\r\n            <Hidden xsDown implementation=\"css\">\r\n            <Drawer\r\n                classes={{paper: props.classes.drawerPaper}}\r\n                className={props.classes.drawer}\r\n                variant=\"permanent\"\r\n                anchor=\"right\"\r\n              >\r\n                {drawer}\r\n              </Drawer>\r\n            </Hidden>\r\n          </nav>\r\n\r\n          <main className={props.classes.content}>\r\n            <div className={props.classes.toolbar} />\r\n            \r\n            {props.children}\r\n          </main>\r\n\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(Navigation);\r\n","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\ViewInfo.js",["84","85","86","87","88"],"import React, { Component } from 'react';\r\nimport {withRouter, Link} from 'react-router-dom';\r\nimport axios from 'axios'\r\n\r\nimport 'date-fns';\r\n// import DateFnsUtils from '@date-io/date-fns';\r\n// import {\r\n//     MuiPickersUtilsProvider,\r\n//     KeyboardDatePicker,\r\n//   } from '@material-ui/pickers';\r\n\r\nimport {\r\n    createStyles,\r\n    withStyles,\r\n    Card,\r\n    CardActionArea,\r\n    CardActions,\r\n    CardContent,\r\n    Button,\r\n    Typography,\r\n    // InputLabel,\r\n    // MenuItem,\r\n    // Select,\r\n    // FormControl,\r\n    TextField\r\n\r\n} from \"@material-ui/core\";\r\n\r\nimport './../App.css'\r\n\r\nconst styles = (theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: theme.palette.secondary.main,\r\n      margin: theme.spacing(2)\r\n    },\r\n    button: {\r\n      margin: `0px ${theme.spacing(1)}px`\r\n\r\n    }\r\n  });\r\n  \r\nconst Info = props => (\r\n    <Card className={props.classes.root} >\r\n        <CardActions style={{ padding: '10px', display: 'flex'}}>\r\n            <div style={{ marginLeft: \"auto\" }}>\r\n                <Button \r\n                    size=\"large\" \r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    className={props.classes.button}\r\n                >\r\n                    <Link to={\"/edit/\" + props.info._id} style ={{ textDecoration: \"none\" }}>\r\n                        Edit\r\n                    </Link> \r\n                </Button>\r\n\r\n                <Button \r\n                    size=\"large\" \r\n                    className={props.classes.button}\r\n                    color=\"secondary\"\r\n                    type=\"submit\"\r\n                    value=\"Delete\"\r\n                    variant=\"contained\"\r\n                    onClick={() => { props.deleteInfo(props.info._id) }}\r\n                    style ={{ textDecoration: \"none\" }}\r\n                >\r\n                    \r\n                    Delete\r\n                    \r\n                </Button>\r\n            </div>\r\n        </CardActions>\r\n    </Card>\r\n);\r\n\r\nclass ViewInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: '',\r\n            overview: '',\r\n            symptoms: '',\r\n            causes: '',\r\n            risk_factors: '',\r\n            complications: '',\r\n            prevention: '',\r\n            users: [],\r\n            loading: true,\r\n            info: []\r\n        };\r\n\r\n        this.deleteInfo = this.deleteInfo.bind(this);\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:5000/info/' + this.props.match.params.id)\r\n            .then(response => {\r\n                console.log('response!', response)\r\n                this.setState({\r\n                    title: response.data.title,\r\n                    overview: response.data.overview,\r\n                    symptoms: response.data.symptoms,\r\n                    causes: response.data.causes,\r\n                    risk_factors: response.data.risk_factors,\r\n                    complications: response.data.complications,\r\n                    prevention: response.data.prevention,\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n\r\n        axios.get('http://localhost:5000/users/')\r\n            .then(response => {\r\n                if (response.data.length > 0) {\r\n                    this.setState({\r\n                        users: response.data,\r\n                        loading: false\r\n                    });\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    deleteInfo(id) {\r\n        axios.delete('http://localhost:5000/info/' + id)\r\n            .then(res => console.log(res.data)\r\n        );\r\n        \r\n        this.setState({\r\n            info: this.state.info.filter(el => el._id !== id)\r\n        });\r\n    };\r\n\r\n    infoList() {\r\n        return this.state.info.map(currentInfo => {\r\n            return <Info info={currentInfo} deleteInfo={this.deleteInfo} key={currentInfo._id}/>;\r\n        })\r\n    };\r\n\r\n    render() {\r\n        if(this.state.loading) return <Typography>Loading</Typography>\r\n\r\n        return (\r\n            <div className=\"cardRoot\">\r\n                <Typography \r\n                    gutterBottom \r\n                    variant=\"h5\" \r\n                    component=\"h2\" \r\n                    style={{ fontFamily: \"Raleway\", textTransform: \"uppercase\", letterSpacing: \"3px\" }}\r\n                >\r\n                    {this.state.title}\r\n                </Typography>\r\n\r\n                <br />\r\n\r\n                <Typography\r\n                    variant=\"h5\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    Overview:\r\n                </Typography>\r\n\r\n                <Typography\r\n                    variant=\"body1\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    {this.state.overview}\r\n                </Typography>\r\n\r\n                <br />\r\n\r\n                <Typography\r\n                    variant=\"h5\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    Symptoms:\r\n                </Typography>\r\n\r\n                <Typography\r\n                    variant=\"body1\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    {this.state.symptoms}\r\n                </Typography>\r\n\r\n                <br />\r\n\r\n                <Typography\r\n                    variant=\"h5\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    Causes:\r\n                </Typography>\r\n\r\n                <Typography\r\n                    variant=\"body1\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    {this.state.causes}\r\n                </Typography>\r\n\r\n                <br />\r\n\r\n                <Typography\r\n                    variant=\"h5\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    Risk Factors:\r\n                </Typography>\r\n\r\n                <Typography\r\n                    variant=\"body1\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    {this.state.risk_factors}\r\n                </Typography>\r\n\r\n                <br />\r\n\r\n                <Typography\r\n                    variant=\"h5\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    Complications:\r\n                </Typography>\r\n\r\n                <Typography\r\n                    variant=\"body1\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    {this.state.complications}\r\n                </Typography>\r\n\r\n                <br />\r\n\r\n                <Typography\r\n                    variant=\"h5\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    Prevention:\r\n                </Typography>\r\n\r\n                <Typography\r\n                    variant=\"body1\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    {this.state.prevention}\r\n                </Typography>\r\n\r\n                {this.state.info.map(currentInfo => {\r\n                    return <Info info={currentInfo} deleteInfo={this.deleteInfo} key={currentInfo._id} classes={this.props.classes}/>;\r\n                    })\r\n                }\r\n\r\n                {/* <Button \r\n                    size=\"large\" \r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    className={this.state.button}\r\n                >\r\n                    <Link to={\"/edit/\" + this.state.info._id} style ={{ textDecoration: \"none\" }}>\r\n                        Edit\r\n                    </Link> \r\n                </Button>\r\n\r\n                <Button \r\n                    size=\"large\" \r\n                    className={this.state.button}\r\n                    color=\"secondary\"\r\n                    type=\"submit\"\r\n                    value=\"Delete\"\r\n                    variant=\"contained\"\r\n                    onClick={() => { this.props.deleteInfo(this.props.info._id) }}\r\n                    style ={{ textDecoration: \"none\" }}\r\n                >\r\n                    \r\n                    Delete\r\n                    \r\n                </Button> */}\r\n            </div>\r\n        )\r\n    } \r\n}\r\n\r\nexport default withRouter(ViewInfo)\r\n","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Notes.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\ViewNote.js",["89","90","91","92","93"],"import React, { Component } from 'react';\r\nimport {withRouter, Link} from 'react-router-dom';\r\nimport axios from 'axios'\r\n\r\nimport 'date-fns';\r\n// import DateFnsUtils from '@date-io/date-fns';\r\n// import {\r\n//     MuiPickersUtilsProvider,\r\n//     KeyboardDatePicker,\r\n//   } from '@material-ui/pickers';\r\n\r\nimport {\r\n    createStyles,\r\n    withStyles,\r\n    Card,\r\n    CardActionArea,\r\n    CardActions,\r\n    CardContent,\r\n    Button,\r\n    Typography,\r\n    // InputLabel,\r\n    // MenuItem,\r\n    // Select,\r\n    // FormControl,\r\n    TextField\r\n\r\n} from \"@material-ui/core\";\r\n\r\nimport './../App.css'\r\n\r\nconst styles = (theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: theme.palette.secondary.main,\r\n      margin: theme.spacing(2)\r\n    },\r\n    button: {\r\n      margin: `0px ${theme.spacing(1)}px`\r\n\r\n    }\r\n  });\r\n  \r\n  const Note = props => (\r\n    <Card className={props.classes.root} >\r\n        <CardActions style={{ padding: '10px', display: 'flex'}}>\r\n            <div style={{ marginLeft: \"auto\" }}>\r\n                <Button \r\n                    size=\"large\" \r\n                    color=\"info\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    className={props.classes.button}\r\n                >\r\n                    <Link to={\"/view/note/\" + props.note._id} style ={{ textDecoration: \"none\" }}>\r\n                        View\r\n                    </Link> \r\n                </Button>\r\n                \r\n                <Button \r\n                    size=\"large\" \r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    className={props.classes.button}\r\n                >\r\n                    <Link to={\"/edit/\" + props.note._id} style ={{ textDecoration: \"none\" }}>\r\n                        Edit\r\n                    </Link> \r\n                </Button>\r\n\r\n                <Button \r\n                    size=\"large\" \r\n                    className={props.classes.button}\r\n                    color=\"secondary\"\r\n                    type=\"submit\"\r\n                    value=\"Delete\"\r\n                    variant=\"contained\"\r\n                    onClick={() => { props.deleteNote(props.note._id) }}\r\n                    style ={{ textDecoration: \"none\" }}\r\n                >\r\n                    \r\n                        Delete\r\n                    \r\n                </Button>\r\n            </div>\r\n        </CardActions>\r\n    </Card>\r\n);\r\n\r\nclass ViewNote extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: '',\r\n            body: '',\r\n            stickyNote: '',\r\n            flashcard: '',\r\n            image: '',\r\n            users: [],\r\n            loading: true,\r\n            note: []\r\n        };\r\n\r\n        this.deleteNote = this.deleteNote.bind(this);\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:5000/note/' + this.props.match.params.id)\r\n            .then(response => {\r\n                console.log('response!', response)\r\n                this.setState({\r\n                    title: response.data.title,\r\n                    body: response.data.body,\r\n                    stickyNote: response.data.stickyNote,\r\n                    flashcard: response.data.flashcard,\r\n                    image: response.data.image,\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n\r\n        axios.get('http://localhost:5000/users/')\r\n            .then(response => {\r\n                if (response.data.length > 0) {\r\n                    this.setState({\r\n                        users: response.data,\r\n                        loading: false\r\n                    });\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    deleteNote(id) {\r\n        axios.delete('http://localhost:5000/note/' + id)\r\n            .then(res => console.log(res.data)\r\n        );\r\n        \r\n        this.setState({\r\n            note: this.state.note.filter(el => el._id !== id)\r\n        });\r\n    };\r\n\r\n    noteList() {\r\n        return this.state.note.map(currentNote => {\r\n            return <Note note={currentNote} deleteNote={this.deleteNote} key={currentNote._id}/>;\r\n        })\r\n    };\r\n\r\n    render() {\r\n        if(this.state.loading) return <Typography>Loading</Typography>\r\n\r\n        return (\r\n            <div className=\"cardRoot\">\r\n                <Typography \r\n                    gutterBottom \r\n                    variant=\"h5\" \r\n                    component=\"h2\" \r\n                    style={{ fontFamily: \"Raleway\", textTransform: \"uppercase\", letterSpacing: \"3px\" }}\r\n                >\r\n                    {this.state.title}\r\n                </Typography>\r\n\r\n                <br />\r\n\r\n                <Typography\r\n                    variant=\"body1\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    {this.state.body}\r\n                </Typography>\r\n\r\n                <br />\r\n\r\n                <Typography\r\n                    variant=\"body1\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    {this.state.stickyNote}\r\n                </Typography>\r\n\r\n                <br />\r\n\r\n                <Typography\r\n                    variant=\"body1\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    {this.state.flashcard}\r\n                </Typography>\r\n\r\n                <br />\r\n\r\n                <Typography\r\n                    variant=\"body1\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    {this.state.image}\r\n                </Typography>\r\n\r\n                {this.state.note.map(currentNote => {\r\n                    return <Note note={currentNote} deleteNote={this.deleteNote} key={currentNote._id} classes={this.props.classes}/>;\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    } \r\n}\r\n\r\nexport default withRouter(ViewNote)\r\n","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\CreateNote.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\BookmarksPage.js",[],"C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Symptoms.js",["94","95","96","97"],"import React, { Component, useState, useEffect } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n    createStyles,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\n\r\nimport './../App.css'\r\n\r\n// const BASE_URL = \"https://priaid-symptom-checker-v1.p.rapidapi.com\"\r\n// const TOKEN = \"3cf5fb64ffmsh61f42d18ae2ad82p1a237ejsn61ee2be8eb99\"\r\n\r\nconst styles = (theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: theme.palette.secondary.main,\r\n      margin: theme.spacing(2)\r\n    },\r\n    button: {\r\n      margin: `0px ${theme.spacing(1)}px`\r\n\r\n    }\r\n  });\r\n  \r\nconst Symptom = props => (\r\n    <Card className={props.classes.root} >\r\n        <CardActionArea>\r\n            <CardContent>\r\n                <Typography\r\n                    variant=\"h5\" \r\n                    color=\"textSecondary\"\r\n                    component=\"h5\"    \r\n                >\r\n                    {props.Symptom.symptom}\r\n                </Typography>\r\n\r\n                {/* <Typography\r\n                    variant=\"body2\" \r\n                    color=\"textSecondary\"\r\n                    component=\"p\"    \r\n                >\r\n                    {props.Symptom.body}\r\n                </Typography> */}\r\n            </CardContent>\r\n        </CardActionArea>\r\n\r\n        <CardActions style={{ padding: '10px', display: 'flex'}}>\r\n            {/* <div style={{ marginLeft: \"auto\" }}>\r\n                <Button \r\n                    size=\"large\" \r\n                    color=\"info\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    className={props.classes.button}\r\n                >\r\n                    <Link to={\"/view/Symptom/\" + props.Symptom._id} style ={{ textDecoration: \"none\" }}>\r\n                        View\r\n                    </Link> \r\n                </Button>\r\n                \r\n                <Button \r\n                    size=\"large\" \r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    className={props.classes.button}\r\n                >\r\n                    <Link to={\"/edit/\" + props.Symptom._id} style ={{ textDecoration: \"none\" }}>\r\n                        Edit\r\n                    </Link> \r\n                </Button>\r\n\r\n                <Button \r\n                    size=\"large\" \r\n                    className={props.classes.button}\r\n                    color=\"secondary\"\r\n                    type=\"submit\"\r\n                    value=\"Delete\"\r\n                    variant=\"contained\"\r\n                    onClick={() => { props.deleteSympom(props.Symptom._id) }}\r\n                    style ={{ textDecoration: \"none\" }}\r\n                >\r\n                    \r\n                        Delete\r\n                    \r\n                </Button>\r\n            </div> */}\r\n        </CardActions>\r\n    </Card>\r\n);\r\n\r\n// const [posts, setPosts] = useState([]);\r\n\r\nclass SymptomsPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // this.deleteSymptom = this.deleteSymptom.bind(this);\r\n\r\n        this.state = {\r\n            symptoms: []\r\n        };\r\n    };\r\n    \r\n    // componentDidMount() {\r\n    //     axios.get(BASE_URL + \"/symptoms?language=en-gb&format=json\", {\r\n    //         headers: {\r\n    //             \"x-rapidapi-key\": TOKEN\r\n    //         }\r\n    //     })\r\n    //     .then(response => {\r\n    //         console.log('response!', response)\r\n    //         this.setState({ symptoms: response.data })\r\n    //     })\r\n    //     .catch((error) => {\r\n    //         console.log(error);\r\n    //     })\r\n    // };\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:5000/Symptom/')\r\n            .then(response => {\r\n                this.setState({ symptoms: response.data })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    };\r\n    \r\n    // deleteSymptom(id) {\r\n    //     axios.delete('http://localhost:5000/Symptom/' + id)\r\n    //         .then(res => console.log(res.data)\r\n    //     );\r\n        \r\n    //     this.setState({\r\n    //         symptoms: this.state.Symptom.filter(el => el._id !== id)\r\n    //     });\r\n    // };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"cardRoot\">\r\n                <Typography \r\n                    gutterBottom \r\n                    variant=\"h5\" \r\n                    component=\"h2\" \r\n                    style={{ fontFamily: \"Raleway\", textTransform: \"uppercase\", letterSpacing: \"3px\" }}\r\n                >\r\n                    Your Symptoms\r\n                \r\n                    {/* <div style={{ padding: '10px', display: 'flex'}}> */}\r\n                        {/* <Button \r\n                            size=\"large\" \r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            style={{ marginLeft: \"35px\" }}\r\n                        >\r\n                            <Link to={\"/create/Symptom\"} style ={{ textDecoration: \"none\", float: \"right\" }}>\r\n                                Create Symptom\r\n                            </Link> \r\n                        </Button> */}\r\n                    {/* </div> */}\r\n                </Typography>\r\n\r\n                \r\n                {this.state.symptoms.length > 0 && this.state.symptoms.map((currentSymptom, i) => {\r\n                    return <Symptom Symptom={currentSymptom} deleteSymptom={this.deleteSymptom} key={i} classes={this.props.classes}/>;\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(SymptomsPage)                             \r\n","C:\\Users\\johnc\\Desktop\\IADT\\Year 4\\Research Project\\B - Coding\\med-diagnostic-tool\\src\\components\\Search.js",["98","99"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\n\r\n\r\n// const newSearch = () => {\r\n  // const [names, setNames] = React.useState([]) \r\n  // const [options, setOptions] = React.useState([])\r\n    \r\n  //   const fetchOptions = () => {\r\n  //     axios.get('http://localhost:5000/Symptom/')\r\n  //     .then(response => {\r\n  //       setNames(response.data.names)\r\n  //       setOptions(response.data.data)\r\n  //     })\r\n  //     .catch((error) => {\r\n  //         console.log(error);\r\n  //     })\r\n  //   }\r\n\r\n\r\n//     return (\r\n\r\n//     )\r\n// }\r\n\r\nconst filter = createFilterOptions();\r\n\r\nconst top100Films = [\r\n    { title: 'The Shawshank Redemption', year: 1994 },\r\n    { title: 'The Godfather', year: 1972 },\r\n    { title: 'The Godfather: Part II', year: 1974 },\r\n    { title: 'The Dark Knight', year: 2008 },\r\n    { title: '12 Angry Men', year: 1957 },\r\n    { title: \"Schindler's List\", year: 1993 },\r\n]\r\n\r\nconst Search = () => {\r\n  const [value, setValue] = React.useState(null);\r\n  const [names, setNames] = React.useState([]) \r\n  const [options, setOptions] = React.useState([])\r\n    \r\nReact.useEffect(() => {\r\n  if(value && value.title && value.title !== \"\") {\r\n    axios.get('http://localhost:5000/search/' + value.title)\r\n    .then(response => {\r\n      setNames(response.data.names)\r\n      setOptions(response.data.data)\r\n\r\n    })\r\n    .catch((error) => {\r\n        console.log(error);\r\n    })\r\n  }\r\n}, [value])\r\n\r\n    // const fetchOptions = (keyword) => {\r\n    //   axios.get('http://localhost:5000/search/' + keyword)\r\n    //   .then(response => {\r\n    //     setNames(response.data.names)\r\n    //     setOptions(response.data.data)\r\n    //     return response.data.data\r\n    //   })\r\n    //   .catch((error) => {\r\n    //       console.log(error);\r\n    //   })\r\n    // }\r\n\r\n// return (\r\n//   <TextField onChange={handleSearchChange} value={search} />\r\n// )\r\n\r\n  return (\r\n    <Autocomplete\r\n      value={value}\r\n      onChange={(event, newValue) => {\r\n        if (typeof newValue === 'string') {\r\n          setValue({\r\n            title: newValue,\r\n          });\r\n\r\n        } else if (newValue && newValue.inputValue) {\r\n          // Create a new value from the user input\r\n          setValue({\r\n            title: newValue.inputValue,\r\n          });\r\n        } else {\r\n          setValue(newValue);\r\n        }\r\n      }}\r\n      filterOptions={(options, params) => {\r\n        const filtered = filter(options, params);\r\n\r\n        // Suggest the creation of a new value\r\n        if (params.inputValue !== '') {\r\n          // filtered.push({\r\n          //   inputValue: params.inputValue,\r\n          //   title: `Add \"${params.inputValue}\"`,\r\n          // });\r\n\r\n          filtered.push({\r\n            inputValue: params.inputValue,\r\n            title: `No results found`,\r\n          });\r\n        }\r\n        console.log('filter', options, params)\r\n        return filtered;\r\n      }}\r\n      selectOnFocus\r\n      clearOnBlur\r\n      handleHomeEndKeys\r\n      id=\"free-solo-with-text-demo\"\r\n      options={options}\r\n      getOptionLabel={(option) => {\r\n        // Value selected with enter, right from the input\r\n        if (typeof option === 'string') {\r\n          return option;\r\n        }\r\n        // Add \"xxx\" option created dynamically\r\n        if (option.inputValue) {\r\n          return option.inputValue;\r\n        }\r\n        // Regular option\r\n        return option.title;\r\n      }}\r\n      renderOption={(option) => option.title}\r\n      style={{ width: 300 }}\r\n      freeSolo\r\n      renderInput={(params) => (\r\n        <TextField {...params} label=\"Search...\" variant=\"filled\" />\r\n      )}\r\n    />\r\n  );\r\n}\r\nexport default Search",{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":4,"column":8,"nodeType":"106","messageId":"107","endLine":4,"endColumn":11},{"ruleId":"104","severity":1,"message":"108","line":21,"column":3,"nodeType":"106","messageId":"107","endLine":21,"endColumn":12},{"ruleId":"104","severity":1,"message":"109","line":23,"column":3,"nodeType":"106","messageId":"107","endLine":23,"endColumn":12},{"ruleId":"104","severity":1,"message":"110","line":29,"column":3,"nodeType":"106","messageId":"107","endLine":29,"endColumn":7},{"ruleId":"104","severity":1,"message":"111","line":32,"column":13,"nodeType":"106","messageId":"107","endLine":32,"endColumn":23},{"ruleId":"104","severity":1,"message":"112","line":165,"column":10,"nodeType":"106","messageId":"107","endLine":165,"endColumn":16},{"ruleId":"104","severity":1,"message":"113","line":14,"column":5,"nodeType":"106","messageId":"107","endLine":14,"endColumn":15},{"ruleId":"104","severity":1,"message":"114","line":16,"column":5,"nodeType":"106","messageId":"107","endLine":16,"endColumn":19},{"ruleId":"104","severity":1,"message":"115","line":18,"column":5,"nodeType":"106","messageId":"107","endLine":18,"endColumn":16},{"ruleId":"104","severity":1,"message":"109","line":25,"column":5,"nodeType":"106","messageId":"107","endLine":25,"endColumn":14},{"ruleId":"104","severity":1,"message":"116","line":31,"column":7,"nodeType":"106","messageId":"107","endLine":31,"endColumn":13},{"ruleId":"104","severity":1,"message":"113","line":14,"column":5,"nodeType":"106","messageId":"107","endLine":14,"endColumn":15},{"ruleId":"104","severity":1,"message":"114","line":16,"column":5,"nodeType":"106","messageId":"107","endLine":16,"endColumn":19},{"ruleId":"104","severity":1,"message":"115","line":18,"column":5,"nodeType":"106","messageId":"107","endLine":18,"endColumn":16},{"ruleId":"104","severity":1,"message":"109","line":25,"column":5,"nodeType":"106","messageId":"107","endLine":25,"endColumn":14},{"ruleId":"104","severity":1,"message":"116","line":31,"column":7,"nodeType":"106","messageId":"107","endLine":31,"endColumn":13},{"ruleId":"104","severity":1,"message":"117","line":1,"column":28,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},{"ruleId":"104","severity":1,"message":"118","line":1,"column":38,"nodeType":"106","messageId":"107","endLine":1,"endColumn":47},{"ruleId":"104","severity":1,"message":"119","line":2,"column":9,"nodeType":"106","messageId":"107","endLine":2,"endColumn":13},{"ruleId":"104","severity":1,"message":"120","line":9,"column":8,"nodeType":"106","messageId":"107","endLine":9,"endColumn":14},{"ruleId":"104","severity":1,"message":"121","line":31,"column":7,"nodeType":"106","messageId":"107","endLine":31,"endColumn":18},{"ruleId":"104","severity":1,"message":"122","line":42,"column":10,"nodeType":"106","messageId":"107","endLine":42,"endColumn":15},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'InputBase' is defined but never used.","'TextField' is defined but never used.","'Face' is defined but never used.","'SearchIcon' is defined but never used.","'filter' is assigned a value but never used.","'withStyles' is defined but never used.","'CardActionArea' is defined but never used.","'CardContent' is defined but never used.","'styles' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'top100Films' is assigned a value but never used.","'names' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]